<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="utf-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
        <meta name="description" content="" />
        <meta name="author" content="" />
        <title>My HomePage</title>
        <!-- Favicon-->
        <link rel="icon" type="image/x-icon" href="assets/favicon.ico" />
        <!-- Custom Google font-->
        <link rel="preconnect" href="https://fonts.googleapis.com" />
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
        <link href="https://fonts.googleapis.com/css2?family=Plus+Jakarta+Sans:wght@100;200;300;400;500;600;700;800;900&amp;display=swap" rel="stylesheet" />
        <!-- Bootstrap icons-->
        <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.1/font/bootstrap-icons.css" rel="stylesheet" />
        <!-- Core theme CSS (includes Bootstrap)-->
        <link href="css/styles.css" rel="stylesheet" />
        <script src="//code.jquery.com/jquery-1.11.0.min.js"></script>
        <script type="text/javascript">   
            $(document).ready( function() {
            
              $("#lnb").load("/include/lnb.html");  // 상위메뉴
              $("#footer").load("/include/footer.html");  // footer
            
            });
          </script>          
    </head>
    <body class="d-flex flex-column h-100">
        <main class="flex-shrink-0">
            <!-- Navigation-->
            <div id="lnb"></div>
            <!-- Projects Section-->
            <section class="py-5">
                <div class="container px-0 mb-5">
                    <div class="text-center mb-5">
                        <h1 class="display-5 fw-bolder mb-0"><span class="text-gradient d-inline">Ajax의 대표적인 취약점</span></h1>
                    </div>
                    <div class="row gx-5 justify-content-center">
                        <div class="col-lg-11 col-xl-9 col-xxl-8">
                            <!-- Project Card 1-->
                            <div class="card overflow-hidden shadow rounded-4 border-0 mb-5">
                                <div class="card-body p-0">
                                    <div class="d-flex align-items-center" style="margin-left: 20px;margin-top: 10px;">
                                        <div class="p-9">
                                            <!-- <h2 class="fw-bolder">Ajax의 대표적인 취약점</h2> -->
                                            <ul>
												<span style="font-size: 30px; font-weight: 800;">XSS(Cross-site Scripting)</span><br>
                                                <span style="text-decoration:underline; text-decoration-color: red;">일반 사용자에게 악의적인 스크립트를 실행시키는 공격 기법 종류</span>로써<br>
                                                javaScript로 구성된 Ajax에게 XSS는 치명적인 공격이 될 수 있다. <br>
                                                <br>
                                                XSS는 공격자들이 웹 어플리케이션에 몰래 침투하기 위해 이용하는 가장 일반적인 공격 중에 하나. <br>
                                                XSS는 JavaScript를 통해 이루어지는 공격이므로 JavaScript로 구성된 Ajax에게 치명적인 공격이 될 수 있다. <br>
                                                Ajax가 비동기 방식으로 웹 페이지를 불러오는 과정에서 악성 스크립트가 삽입된다면<br>
                                                 Ajax의 특성상 사용자는 공격 당하고 있다는 사실을 모른 채 공격 코드가 사용자의 시스템에서 실행된다. <br>
                                                 <br>
                                                결국 악의적인 사용자는 Ajax의 XSS 취약점을 가지고 여러 가지 방법으로 악성 스크립트를 삽입하여 <br>
                                                임의의 사용자의 세션 및 쿠키, 패스워드, 중요한 개인정보 등을 훔치는 등의 공격을 행할 수 있음<br>
                                                <br><br>
                                                <span style="color: blue;font-weight: 800;">대응 방안</span><br>
                                                1) Server-Side에서 입력값 검증이 이루어져야 한다.<br>
                                                사용자 입력처리 모듈을 사용하여 비정상적인 악성 스크립트 삽입이 되지 않도록 필터링을 해야 한다.<br><br>
                                                2) 사용자 계정 및 패스워드 타입<br>
                                                사용자 인증 부분에는 SQL Injection 유형을 차단하기 위해 <br>숫자, 영문 대/소문자 길이 등을 정의하고 기타 문자는 입력 받지 않는다.<br><br>
                                                3) 게시판 타입<br>
                                                입력문자의 타입(영문 대/소문자) 및 길이를 정의하여 통제할 수 있다. <br>CSS에 사용되는 문자열이 삽입될 수 있으니 주의해야 한다.<br><br>
                                                4) 주민등록번호 타입<br>
                                                주민등록번호를 입력 받기 위해 숫자형태의 6~7자리를 정의한다.<br><br>
                                                5) 날짜타입<br>
                                                사전에 정의된 날짜 형식을 사용하거나 날짜형식에 맞는 표현식을 작성한다.<br><br>
                                                6) 숫자타입<br>
                                                계좌이체의 경우 이체금액을 음수(-)로 입력할 경우 잔액계좌에는 오히려 금액만큼 증가될 수 있기 떄문에 <br>금액을 입력 받는 부분은 양수(+)만을 입력 해야한다.<br><br>
                                                7) 기타 취약성 문자<br>
                                                < > \ ” ‘ ( ) & 등의 문자를 사용하는 경우 해당 문자를 다른 문자로 변경하는 것이 보안상 안전하다.
                                            </ul>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </section>
        </main>
        <!-- Footer-->
        <div id="footer"></div>
        <!-- Bootstrap core JS-->
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
    </body>
</html>
